// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetCoreAngular_BackEnd;

namespace NetCoreAngular_BackEnd.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220223115159_Personas")]
    partial class Personas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NetCoreAngular_BackEnd.Entidades.Direccion", b =>
                {
                    b.Property<int>("IdDireccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DireccionDetallada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Distrito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Provincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDireccion");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("NetCoreAngular_BackEnd.Entidades.Persona", b =>
                {
                    b.Property<int>("idPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("apellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("apellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("edad")
                        .HasColumnType("int");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idPersona");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("NetCoreAngular_BackEnd.Entidades.PersonaDireccion", b =>
                {
                    b.Property<int>("PersonaID")
                        .HasColumnType("int");

                    b.Property<int>("DireccionID")
                        .HasColumnType("int");

                    b.HasKey("PersonaID", "DireccionID");

                    b.HasIndex("DireccionID");

                    b.ToTable("PersonaDireccion");
                });

            modelBuilder.Entity("NetCoreAngular_BackEnd.Entidades.PersonaDireccion", b =>
                {
                    b.HasOne("NetCoreAngular_BackEnd.Entidades.Direccion", "Direccion")
                        .WithMany("PersonaDirecciones")
                        .HasForeignKey("DireccionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NetCoreAngular_BackEnd.Entidades.Persona", "Persona")
                        .WithMany("PersonaDirecciones")
                        .HasForeignKey("PersonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direccion");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("NetCoreAngular_BackEnd.Entidades.Direccion", b =>
                {
                    b.Navigation("PersonaDirecciones");
                });

            modelBuilder.Entity("NetCoreAngular_BackEnd.Entidades.Persona", b =>
                {
                    b.Navigation("PersonaDirecciones");
                });
#pragma warning restore 612, 618
        }
    }
}
